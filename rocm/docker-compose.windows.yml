services:
  # AMD iGPU ROCm Base Container - Windows/Docker Desktop Compatible
  rocm-igpu-base-windows:
    image: rocm-igpu:latest
    build:
      context: .
      dockerfile: Dockerfile.rocm-base
    container_name: rocm-igpu-base-windows
    # No device access for Windows Docker Desktop - will test software mode
    # Device access is commented out as these don't exist in Windows Docker Desktop:
    # devices:
    #   - /dev/kfd:/dev/kfd  # AMD KFD not available in Windows Docker
    #   - /dev/dri:/dev/dri  # DRI not available in Windows Docker
    
    # Group permissions not needed in Windows Docker Desktop
    # group_add:
    #   - "${RENDER_GROUP_ID:-102}"
    #   - "${VIDEO_GROUP_ID:-44}"
    
    # Interactive shell for testing
    stdin_open: true
    tty: true
    restart: unless-stopped
    
    # Environment variables for ROCm testing
    environment:
      - HIP_VISIBLE_DEVICES=0
      - CUDA_VISIBLE_DEVICES=""
      - HSA_OVERRIDE_GFX_VERSION=11.0.2
      - HCC_AMDGPU_TARGET=gfx1103
      - ROCM_PATH=/opt/rocm
      - HIP_PLATFORM=amd
    
    # Command to run our simple GPU test script (no PyTorch dependency)
    command: ["python3", "/app/test_gpu_simple.py"]
    
    # Mount our test script
    volumes:
      - ./test_gpu_simple.py:/app/test_gpu_simple.py:ro

  # ROCm LLaMA.cpp Server - Windows/Docker Desktop Compatible (CPU only)
  rocm-llama-server-windows:
    build:
      context: .
      dockerfile: Dockerfile.rocm-llama-server
    container_name: rocm-llama-server-windows
    ports:
      - "8085:8080"
    # No device access for Windows Docker Desktop
    # devices:
    #   - /dev/kfd:/dev/kfd  # AMD KFD not available in Windows Docker
    #   - /dev/dri:/dev/dri  # DRI not available in Windows Docker
    
    # Group permissions not needed in Windows Docker Desktop
    # group_add:
    #   - "${RENDER_GROUP_ID:-102}"
    #   - "${VIDEO_GROUP_ID:-44}"
    
    # ROCm environment variables (software mode)
    environment:
      - MODEL_SCRIPT=${MODEL_SCRIPT:-gemma3-27b-it-abliterated-rocm}
      - HSA_OVERRIDE_GFX_VERSION=11.0.2
      - HCC_AMDGPU_TARGET=gfx1103
      - ROCM_VERSION=6.4.1
      - HSA_ENABLE_SDMA=0
      - ROCR_VISIBLE_DEVICES=0
      - HIP_VISIBLE_DEVICES=0
      - HIP_PLATFORM=amd
      - ROCM_PATH=/opt/rocm
    # Model cache volume
    volumes:
      - llama_cache_windows:/root/.cache/llama
    restart: unless-stopped

  # ROCm Mistral Small 3.2 24B Vision - Windows Compatible
  rocm-mistral-small-windows:
    build:
      context: .
      dockerfile: Dockerfile.rocm-llama-server
    container_name: rocm-mistral-small-windows
    ports:
      - "8085:8080"
    # No device access for Windows Docker Desktop
    # devices:
    #   - /dev/kfd:/dev/kfd  # AMD KFD not available in Windows Docker
    #   - /dev/dri:/dev/dri  # DRI not available in Windows Docker
    
    # ROCm environment variables (software mode)
    environment:
      - MODEL_SCRIPT=mistral-small-3.2-24b-vision-rocm
      - HSA_OVERRIDE_GFX_VERSION=11.0.2
      - HCC_AMDGPU_TARGET=gfx1103
      - ROCM_VERSION=6.4.1
      - HSA_ENABLE_SDMA=0
      - ROCR_VISIBLE_DEVICES=0
      - HIP_VISIBLE_DEVICES=0
      - HIP_PLATFORM=amd
      - ROCM_PATH=/opt/rocm
    # Model cache volume
    volumes:
      - llama_cache_windows:/root/.cache/llama
    restart: unless-stopped

volumes:
  llama_cache_windows:
